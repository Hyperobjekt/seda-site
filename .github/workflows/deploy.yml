name: Triggered Deploy to AWS

on:
  push:
    branches:
      - master
      - staging
      - production

jobs:
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

      - name: Set bucket for branch
        id: deploy-bucket
        run: |
          if [[ $GITHUB_REF == 'refs/heads/production' ]]; then
              echo "::set-output name=S3_BUCKET::edopportunity.org"
              echo "::set-output name=CLOUDFRONT_ID::${{ secrets.AWS_CLOUDFRONT_ID_PROD }}"
          elif [[ $GITHUB_REF == 'refs/heads/staging' ]]; then
              echo "::set-output name=S3_BUCKET::staging.edopportunity.org"
              echo "::set-output name=CLOUDFRONT_ID::${{ secrets.AWS_CLOUDFRONT_ID_STAGING }}"
          else
              echo "::set-output name=S3_BUCKET::dev.edopportunity.org"
              echo "::set-output name=CLOUDFRONT_ID::${{ secrets.AWS_CLOUDFRONT_ID_DEV }}"
          fi
      - run: cp src/robots.production.txt themes/base-hugo-theme/static/robots.txt
        if: github.ref == 'refs/heads/production'
      - run: cp src/robots.staging.txt themes/base-hugo-theme/static/robots.txt
        if: github.ref != 'refs/heads/production'

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "0.80.0"
          extended: true

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: hugo

      - name: Deploy
        uses: InscribeAI/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ steps.deploy-bucket.outputs.S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"
          SOURCE_DIR: "public"
          AWS_CF_DISTRIBUTION_ID: ${{ steps.deploy-bucket.outputs.CLOUDFRONT_ID }}
