"use strict";function _readOnlyError(a){throw new Error("\""+a+"\" is read-only")}/**
 * Analytics listeners
 */(function(a){// console.log('Loading Analytics listeners');
var b={};if(b.push=function(a){dataLayer.push(a)},b.navigate=function(a,b){b?window.open(a,"_blank"):window.location.href=a},b.init=function(){a(".gta-event-CTAClick").on("click touchstart",function(c){console.log(".gta-event-CTAClick"),c.preventDefault();// console.log(e.currentTarget);
var d=a(c.currentTarget).attr("href"),e="_blank"===a(c.currentTarget).attr("target"),f={event:"CTAClick",CTADestination:encodeURI(d),eventCallback:function eventCallback(){b.navigate(d,e)}};b.push(f)}),a(".gta-event-bioExpanded").on("click touchstart",function(c){console.log(".gta-event-bioExpanded");var d=a(c.currentTarget);// console.log($target);
b.push({event:"bioExpanded"})}),a(".gta-event-eMailSignupAttempt").on("click touchstart",function(){console.log(".gta-event-eMailSignupAttempt");b.push({event:"eMailSignupAttempt"})}),a(".gta-event-postSelected").on("click touchstart",function(c){console.log(".gta-event-postSelected"),c.preventDefault();var d=a(c.currentTarget).attr("href"),e={event:"postSelected",discoverySelection:encodeURI(d),eventCallback:function eventCallback(){window.location.href=d}};b.push(e)}),a(".gta-event-showAbstractandVersion").on("click touchstart",function(c){console.log(".gta-event-showAbstractandVersion");var d=a(c.currentTarget),e=null;e=a(".row.subnav.small-tab-nav").is(":visible")?(_readOnlyError("$paperCategory"),a(".row.subnav.small-tab-nav").find("ul.anchor-links li a.active").text()):(_readOnlyError("$paperCategory"),a(".row.subnav.large-tab-nav").find("#researchTabs li a.active").text());// console.log('$paperCategory: ' + $paperCategory);
var f=null;f=a(c.currentTarget).closest(".research-paper").find(".info h5").text();// console.log($paperName);
var g={event:"showAbstractandVersion",paperCategory:e?e:"Unavailable",paperName:f?f:"Unavailable"};b.push(g)}),a(".gta-event-categorySelected").on("click touchstart",function(c){console.log(".gta-event-categorySelected");var d=a(c.currentTarget),e=d.text(),f={event:"categorySelected",paperCategory:e?e:"Unavailable"};b.push(f)}),a(".gta-event-paperDownloadbyVersion").on("click touchstart",function(c){console.log(".gta-event-paperDownloadbyVersion");// e.preventDefault();
var d=a(c.currentTarget),e=null;e=a(c.currentTarget).closest(".research-paper").find(".info h5").text();// console.log($paperName);
var f=d.attr("data-date"),g={event:"paperDownloadbyVersion",paperVersion:f,paperName:e};// console.log($paperVersion);
b.push(g)}),a(".gta-event-paperDownloadLatest").on("click touchstart",function(c){console.log(".gta-event-paperDownloadLatest");var d=a(c.currentTarget),e=d.closest(".research-paper").find(".info h5").text(),f=d.attr("data-date");b.push({event:"paperDownloadLatest",paperVersion:f,paperName:e})}),a(".gta-event-articleSelected").on("click touchstart",function(c){console.log(".gta-event-articleSelected"),c.preventDefault();var d=a(c.currentTarget).attr("href"),e=a(c.currentTarget).closest(".row.news-item").find("h4 a"),f=e.text(),g=e.attr("data-outlet"),h="_blank"===a(c.currentTarget).attr("target");b.push({event:"articleSelected",newsArticleName:f,newsArticlePublication:g,eventCallback:function eventCallback(){b.navigate(d,h)}})}),a(".gta-event-faqTopicExpanded").on("click touchstart",function(c){console.log(".gta-event-faqTopicExpanded");var d=a(c.currentTarget),e=a(c.currentTarget).find("h5").text();b.push({event:"faqTopicExpanded",faqTopicExpansion:e})}),a(".gta-event-navClick").on("click touchstart",function(c){console.log(".gta-event-navClick"),c.preventDefault();var d=a(c.currentTarget),e=d.attr("href"),f="_blank"===d.attr("target"),g=null;1<=d.closest("#drawer").length&&(g="main"),1<=d.closest("footer").length&&(g="footer");var h=d.text().trim();0>=h.length&&(h=d.attr("href")),0>=h.length&&(h=d.find("span, h1")[0].text().trim());// console.log($navType);
// console.log($navItem);
var i={event:"navClick",navType:g,navItem:h,eventCallback:function eventCallback(){b.navigate(e,f)}};b.push(i)}),window.addEventListener("error",function(a){console.log("window listener for error");var c={event:"error",errorMessage:"Error originating from "+a.filename+" at line "+a.lineno+", column "+a.colno+":\n"+a.message};b.push(c)})},!!dataLayer)// console.log('dataLayer found');
var c=1<=a("body.type-posts").length?1200:600,d=setTimeout(function(){3<=dataLayer.length?b.init():console.log("The GTM dataLayer cannot be found... Skipping analytics listeners.")},c);else console.log("Error! The GTM dataLayer cannot be found... Skipping analytics listeners.")})(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hbmFseXRpY3MuanMiXSwibmFtZXMiOlsiJCIsImFuYWx5dGljcyIsInB1c2giLCJkYXRhIiwiZGF0YUxheWVyIiwibmF2aWdhdGUiLCJ0YXJnZXQiLCJibGFuayIsIndpbmRvdyIsIm9wZW4iLCJsb2NhdGlvbiIsImhyZWYiLCJpbml0Iiwib24iLCJlIiwiY29uc29sZSIsImxvZyIsInByZXZlbnREZWZhdWx0IiwiJHRhcmdldCIsImN1cnJlbnRUYXJnZXQiLCJhdHRyIiwiJHRhcmdldEJsYW5rIiwiX29iaiIsImVuY29kZVVSSSIsIiRwYXBlckNhdGVnb3J5IiwiaXMiLCJmaW5kIiwidGV4dCIsIiRwYXBlck5hbWUiLCJjbG9zZXN0IiwiJHBhcGVyVmVyc2lvbiIsIiR0aXRsZU5vZGUiLCIkbmV3c0FydGljbGVOYW1lIiwiJG5ld3NBcnRpY2xlUHVibGljYXRpb24iLCIkdG9waWMiLCIkaHJlZiIsIiRuYXZUeXBlIiwibGVuZ3RoIiwiJG5hdkl0ZW0iLCJ0cmltIiwiYWRkRXZlbnRMaXN0ZW5lciIsImVycm9yIiwiZmlsZW5hbWUiLCJsaW5lbm8iLCJjb2xubyIsIm1lc3NhZ2UiLCJ3YWl0VGltZSIsInRpbWVvdXQiLCJzZXRUaW1lb3V0IiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoia0ZBQUE7O0dBR0EsQ0FBQyxTQUFTQSxDQUFULENBQVksQ0FDWDtBQUNBLEdBQU1DLENBQUFBLENBQVMsQ0FBRyxFQUFsQixDQWlPQSxHQWhPQUEsQ0FBUyxDQUFDQyxJQUFWLENBQWlCLFNBQVVDLENBQVYsQ0FBZ0IsQ0FFL0JDLFNBQVMsQ0FBQ0YsSUFBVixDQUFlQyxDQUFmLENBQ0QsQ0E2TkQsQ0E1TkFGLENBQVMsQ0FBQ0ksUUFBVixDQUFxQixTQUFDQyxDQUFELENBQVNDLENBQVQsQ0FBbUIsQ0FDbENBLENBRGtDLENBRXBDQyxNQUFNLENBQUNDLElBQVAsQ0FBWUgsQ0FBWixDQUFvQixRQUFwQixDQUZvQyxDQUlwQ0UsTUFBTSxDQUFDRSxRQUFQLENB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QyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQW5hbHl0aWNzIGxpc3RlbmVyc1xuICovXG4oZnVuY3Rpb24oJCkge1xuICAvLyBjb25zb2xlLmxvZygnTG9hZGluZyBBbmFseXRpY3MgbGlzdGVuZXJzJyk7XG4gIGNvbnN0IGFuYWx5dGljcyA9IHt9O1xuICBhbmFseXRpY3MucHVzaCA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2FuYWx5dGljcy5wdXNoJyk7XG4gICAgZGF0YUxheWVyLnB1c2goZGF0YSk7XG4gIH1cbiAgYW5hbHl0aWNzLm5hdmlnYXRlID0gKHRhcmdldCwgYmxhbmspID0+IHtcbiAgICBpZiAoYmxhbmspIHtcbiAgICAgIHdpbmRvdy5vcGVuKHRhcmdldCwgJ19ibGFuaycpO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHRhcmdldDtcbiAgICB9XG4gIH1cbiAgYW5hbHl0aWNzLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2FuYWx5dGljcy5pbml0Jyk7XG5cbiAgICAvLyBFdmVudDogQ1RBQ2xpY2tcbiAgICAkKCcuZ3RhLWV2ZW50LUNUQUNsaWNrJykub24oJ2NsaWNrIHRvdWNoc3RhcnQnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgY29uc29sZS5sb2coJy5ndGEtZXZlbnQtQ1RBQ2xpY2snKTtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIC8vIGNvbnNvbGUubG9nKGUuY3VycmVudFRhcmdldCk7XG4gICAgICBjb25zdCAkdGFyZ2V0ID0gJChlLmN1cnJlbnRUYXJnZXQpLmF0dHIoJ2hyZWYnKTtcbiAgICAgIGNvbnN0ICR0YXJnZXRCbGFuayA9ICgkKGUuY3VycmVudFRhcmdldCkuYXR0cigndGFyZ2V0JykgPT09ICdfYmxhbmsnKTtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCR0YXJnZXQpO1xuICAgICAgY29uc3QgX29iaiA9IHtcbiAgICAgICAgJ2V2ZW50JyA6ICdDVEFDbGljaycsXG4gICAgICAgICdDVEFEZXN0aW5hdGlvbic6IGVuY29kZVVSSSgkdGFyZ2V0KSxcbiAgICAgICAgJ2V2ZW50Q2FsbGJhY2snIDogKCkgPT4ge1xuICAgICAgICAgICAgYW5hbHl0aWNzLm5hdmlnYXRlKCR0YXJnZXQsICR0YXJnZXRCbGFuayk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGFuYWx5dGljcy5wdXNoKF9vYmopO1xuICAgIH0pO1xuXG4gICAgLy8gRXZlbnQ6IGJpb0V4cGFuZGVkXG4gICAgJCgnLmd0YS1ldmVudC1iaW9FeHBhbmRlZCcpLm9uKCdjbGljayB0b3VjaHN0YXJ0JywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCcuZ3RhLWV2ZW50LWJpb0V4cGFuZGVkJyk7XG4gICAgICBjb25zdCAkdGFyZ2V0ID0gJChlLmN1cnJlbnRUYXJnZXQpO1xuICAgICAgLy8gY29uc29sZS5sb2coJHRhcmdldCk7XG4gICAgICBjb25zdCBfb2JqID0ge1xuICAgICAgICAnZXZlbnQnIDogJ2Jpb0V4cGFuZGVkJ1xuICAgICAgfVxuICAgICAgYW5hbHl0aWNzLnB1c2goX29iaik7XG4gICAgfSk7XG5cbiAgICAvLyBFdmVudDogZU1haWxTaWdudXBcbiAgICAkKCcuZ3RhLWV2ZW50LWVNYWlsU2lnbnVwQXR0ZW1wdCcpLm9uKCdjbGljayB0b3VjaHN0YXJ0JywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCcuZ3RhLWV2ZW50LWVNYWlsU2lnbnVwQXR0ZW1wdCcpO1xuICAgICAgY29uc3QgX29iaiA9IHtcbiAgICAgICAgJ2V2ZW50JyA6ICdlTWFpbFNpZ251cEF0dGVtcHQnXG4gICAgICB9XG4gICAgICBhbmFseXRpY3MucHVzaChfb2JqKTtcbiAgICB9KTtcblxuICAgIC8vIEV2ZW50OiBwb3N0U2VsZWN0ZWRcbiAgICAkKCcuZ3RhLWV2ZW50LXBvc3RTZWxlY3RlZCcpLm9uKCdjbGljayB0b3VjaHN0YXJ0JywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCcuZ3RhLWV2ZW50LXBvc3RTZWxlY3RlZCcpO1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgY29uc3QgJHRhcmdldCA9ICQoZS5jdXJyZW50VGFyZ2V0KS5hdHRyKCdocmVmJyk7XG4gICAgICBjb25zdCBfb2JqID0ge1xuICAgICAgICAnZXZlbnQnIDogJ3Bvc3RTZWxlY3RlZCcsXG4gICAgICAgICdkaXNjb3ZlcnlTZWxlY3Rpb24nOiBlbmNvZGVVUkkoJHRhcmdldCksXG4gICAgICAgICdldmVudENhbGxiYWNrJyA6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAkdGFyZ2V0O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBhbmFseXRpY3MucHVzaChfb2JqKTtcbiAgICB9KTtcblxuICAgIC8vIEV2ZW50OiBzaG93QWJzdHJhY3RhbmRWZXJzaW9uXG4gICAgLy8gUmVwb3J0czogcGFwZXJDYXRlZ29yeSwgcGFwZXJOYW1lXG4gICAgJCgnLmd0YS1ldmVudC1zaG93QWJzdHJhY3RhbmRWZXJzaW9uJykub24oJ2NsaWNrIHRvdWNoc3RhcnQnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgY29uc29sZS5sb2coJy5ndGEtZXZlbnQtc2hvd0Fic3RyYWN0YW5kVmVyc2lvbicpO1xuICAgICAgY29uc3QgJHRhcmdldCA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcbiAgICAgIGNvbnN0ICRwYXBlckNhdGVnb3J5ID0gbnVsbDtcbiAgICAgIGlmICgkKCcucm93LnN1Ym5hdi5zbWFsbC10YWItbmF2JykuaXMoJzp2aXNpYmxlJykpIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ01vYmlsZSB2aWV3Jyk7XG4gICAgICAgICRwYXBlckNhdGVnb3J5ID0gJCgnLnJvdy5zdWJuYXYuc21hbGwtdGFiLW5hdicpLmZpbmQoJ3VsLmFuY2hvci1saW5rcyBsaSBhLmFjdGl2ZScpLnRleHQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICRwYXBlckNhdGVnb3J5ID0gJCgnLnJvdy5zdWJuYXYubGFyZ2UtdGFiLW5hdicpLmZpbmQoJyNyZXNlYXJjaFRhYnMgbGkgYS5hY3RpdmUnKS50ZXh0KCk7XG4gICAgICB9XG4gICAgICAvLyBjb25zb2xlLmxvZygnJHBhcGVyQ2F0ZWdvcnk6ICcgKyAkcGFwZXJDYXRlZ29yeSk7XG4gICAgICBsZXQgJHBhcGVyTmFtZSA9IG51bGw7XG4gICAgICAkcGFwZXJOYW1lID0gJChlLmN1cnJlbnRUYXJnZXQpLmNsb3Nlc3QoJy5yZXNlYXJjaC1wYXBlcicpLmZpbmQoJy5pbmZvIGg1JykudGV4dCgpO1xuICAgICAgLy8gY29uc29sZS5sb2coJHBhcGVyTmFtZSk7XG4gICAgICBjb25zdCBfb2JqID0ge1xuICAgICAgICAnZXZlbnQnIDogJ3Nob3dBYnN0cmFjdGFuZFZlcnNpb24nLFxuICAgICAgICAncGFwZXJDYXRlZ29yeSc6ICRwYXBlckNhdGVnb3J5ID8gJHBhcGVyQ2F0ZWdvcnkgOiAnVW5hdmFpbGFibGUnLFxuICAgICAgICAncGFwZXJOYW1lJzogJHBhcGVyTmFtZSA/ICRwYXBlck5hbWUgOiAnVW5hdmFpbGFibGUnXG4gICAgICB9XG4gICAgICBhbmFseXRpY3MucHVzaChfb2JqKTtcbiAgICB9KTtcblxuICAgIC8vIEV2ZW50OiBjYXRlZ29yeVNlbGVjdGVkXG4gICAgLy8gUmVwb3J0czogcGFwZXJDYXRlZ29yeVxuICAgICQoJy5ndGEtZXZlbnQtY2F0ZWdvcnlTZWxlY3RlZCcpLm9uKCdjbGljayB0b3VjaHN0YXJ0JywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCcuZ3RhLWV2ZW50LWNhdGVnb3J5U2VsZWN0ZWQnKTtcbiAgICAgIGNvbnN0ICR0YXJnZXQgPSAkKGUuY3VycmVudFRhcmdldCk7XG4gICAgICBjb25zdCAkcGFwZXJDYXRlZ29yeSA9ICR0YXJnZXQudGV4dCgpO1xuICAgICAgLy8gY29uc29sZS5sb2coJHBhcGVyQ2F0ZWdvcnkpO1xuICAgICAgY29uc3QgX29iaiA9IHtcbiAgICAgICAgJ2V2ZW50JyA6ICdjYXRlZ29yeVNlbGVjdGVkJyxcbiAgICAgICAgJ3BhcGVyQ2F0ZWdvcnknOiAkcGFwZXJDYXRlZ29yeSA/ICRwYXBlckNhdGVnb3J5IDogJ1VuYXZhaWxhYmxlJ1xuICAgICAgfVxuICAgICAgYW5hbHl0aWNzLnB1c2goX29iaik7XG4gICAgfSk7XG5cbiAgICAvLyBFdmVudDogcGFwZXJEb3dubG9hZGJ5VmVyc2lvblxuICAgIC8vIFJlcG9ydHM6IHBhcGVyVmVyc2lvbiwgcGFwZXJOYW1lXG4gICAgJCgnLmd0YS1ldmVudC1wYXBlckRvd25sb2FkYnlWZXJzaW9uJykub24oJ2NsaWNrIHRvdWNoc3RhcnQnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgY29uc29sZS5sb2coJy5ndGEtZXZlbnQtcGFwZXJEb3dubG9hZGJ5VmVyc2lvbicpO1xuICAgICAgLy8gZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgY29uc3QgJHRhcmdldCA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcbiAgICAgIGxldCAkcGFwZXJOYW1lID0gbnVsbDtcbiAgICAgICRwYXBlck5hbWUgPSAkKGUuY3VycmVudFRhcmdldCkuY2xvc2VzdCgnLnJlc2VhcmNoLXBhcGVyJykuZmluZCgnLmluZm8gaDUnKS50ZXh0KCk7XG4gICAgICAvLyBjb25zb2xlLmxvZygkcGFwZXJOYW1lKTtcbiAgICAgIGNvbnN0ICRwYXBlclZlcnNpb24gPSAkdGFyZ2V0LmF0dHIoJ2RhdGEtZGF0ZScpO1xuICAgICAgLy8gY29uc29sZS5sb2coJHBhcGVyVmVyc2lvbik7XG4gICAgICBjb25zdCBfb2JqID0ge1xuICAgICAgICAnZXZlbnQnOiAncGFwZXJEb3dubG9hZGJ5VmVyc2lvbicsXG4gICAgICAgICdwYXBlclZlcnNpb24nOiAkcGFwZXJWZXJzaW9uLFxuICAgICAgICAncGFwZXJOYW1lJzogJHBhcGVyTmFtZVxuICAgICAgfVxuICAgICAgYW5hbHl0aWNzLnB1c2goX29iaik7XG4gICAgfSk7XG5cbiAgICAvLyBFdmVudDogcGFwZXJEb3dubG9hZExhdGVzdFxuICAgIC8vIFJlcG9ydHM6IHBhcGVyVmVyc2lvbiwgcGFwZXJOYW1lXG4gICAgJCgnLmd0YS1ldmVudC1wYXBlckRvd25sb2FkTGF0ZXN0Jykub24oJ2NsaWNrIHRvdWNoc3RhcnQnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgY29uc29sZS5sb2coJy5ndGEtZXZlbnQtcGFwZXJEb3dubG9hZExhdGVzdCcpO1xuICAgICAgY29uc3QgJHRhcmdldCA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcbiAgICAgIGNvbnN0ICRwYXBlck5hbWUgPSAkdGFyZ2V0LmNsb3Nlc3QoJy5yZXNlYXJjaC1wYXBlcicpLmZpbmQoJy5pbmZvIGg1JykudGV4dCgpO1xuICAgICAgY29uc3QgJHBhcGVyVmVyc2lvbiA9ICR0YXJnZXQuYXR0cignZGF0YS1kYXRlJyk7XG4gICAgICBjb25zdCBfb2JqID0ge1xuICAgICAgICAnZXZlbnQnOiAncGFwZXJEb3dubG9hZExhdGVzdCcsXG4gICAgICAgICdwYXBlclZlcnNpb24nOiAkcGFwZXJWZXJzaW9uLFxuICAgICAgICAncGFwZXJOYW1lJzogJHBhcGVyTmFtZVxuICAgICAgfVxuICAgICAgYW5hbHl0aWNzLnB1c2goX29iaik7XG4gICAgfSk7XG5cbiAgICAvLyBFdmVudDogYXJ0aWNsZVNlbGVjdGVkXG4gICAgLy8gUmVwb3J0czogbmV3c0FydGljbGVOYW1lLCBuZXdzQXJ0aWNsZVB1YmxpY2F0aW9uXG4gICAgJCgnLmd0YS1ldmVudC1hcnRpY2xlU2VsZWN0ZWQnKS5vbignY2xpY2sgdG91Y2hzdGFydCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCcuZ3RhLWV2ZW50LWFydGljbGVTZWxlY3RlZCcpO1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgY29uc3QgJHRhcmdldCA9ICQoZS5jdXJyZW50VGFyZ2V0KS5hdHRyKCdocmVmJyk7XG4gICAgICBjb25zdCAkdGl0bGVOb2RlID0gJChlLmN1cnJlbnRUYXJnZXQpLmNsb3Nlc3QoJy5yb3cubmV3cy1pdGVtJykuZmluZCgnaDQgYScpO1xuICAgICAgY29uc3QgJG5ld3NBcnRpY2xlTmFtZSA9ICR0aXRsZU5vZGUudGV4dCgpO1xuICAgICAgLy8gY29uc29sZS5sb2coJG5ld3NBcnRpY2xlTmFtZSk7XG4gICAgICBjb25zdCAkbmV3c0FydGljbGVQdWJsaWNhdGlvbiA9ICR0aXRsZU5vZGUuYXR0cignZGF0YS1vdXRsZXQnKTtcbiAgICAgIGNvbnN0ICR0YXJnZXRCbGFuayA9ICgkKGUuY3VycmVudFRhcmdldCkuYXR0cigndGFyZ2V0JykgPT09ICdfYmxhbmsnKTtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCR0YXJnZXRCbGFuayk7XG4gICAgICAvLyBjb25zb2xlLmxvZygkbmV3c0FydGljbGVQdWJsaWNhdGlvbik7XG4gICAgICBjb25zdCBfb2JqID0ge1xuICAgICAgICAnZXZlbnQnOiAnYXJ0aWNsZVNlbGVjdGVkJyxcbiAgICAgICAgJ25ld3NBcnRpY2xlTmFtZSc6ICRuZXdzQXJ0aWNsZU5hbWUsXG4gICAgICAgICduZXdzQXJ0aWNsZVB1YmxpY2F0aW9uJzogJG5ld3NBcnRpY2xlUHVibGljYXRpb24sXG4gICAgICAgICdldmVudENhbGxiYWNrJyA6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgYW5hbHl0aWNzLm5hdmlnYXRlKCR0YXJnZXQsICR0YXJnZXRCbGFuayk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGFuYWx5dGljcy5wdXNoKF9vYmopO1xuICAgIH0pO1xuXG4gICAgLy8gRXZlbnQ6IGZhcVRvcGljRXhwYW5kZWRcbiAgICAvLyBSZXBvcnRzOiBmYXFUb3BpY0V4cGFuc2lvblxuICAgICQoJy5ndGEtZXZlbnQtZmFxVG9waWNFeHBhbmRlZCcpLm9uKCdjbGljayB0b3VjaHN0YXJ0JywgZnVuY3Rpb24oZSkge1xuICAgICAgY29uc29sZS5sb2coJy5ndGEtZXZlbnQtZmFxVG9waWNFeHBhbmRlZCcpO1xuICAgICAgY29uc3QgJHRhcmdldCA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcbiAgICAgIGNvbnN0ICR0b3BpYyA9ICQoZS5jdXJyZW50VGFyZ2V0KS5maW5kKCdoNScpLnRleHQoKTtcbiAgICAgIGNvbnN0IF9vYmogPSB7XG4gICAgICAgICdldmVudCcgOiAnZmFxVG9waWNFeHBhbmRlZCcsXG4gICAgICAgICdmYXFUb3BpY0V4cGFuc2lvbic6ICR0b3BpY1xuICAgICAgfVxuICAgICAgYW5hbHl0aWNzLnB1c2goX29iaik7XG4gICAgfSk7XG5cbiAgICAvLyBFdmVudDogbmF2Q2xpY2tcbiAgICAvLyBSZXBvcnRzOiBuYXZUeXBlLCBuYXZJdGVtXG4gICAgJCgnLmd0YS1ldmVudC1uYXZDbGljaycpLm9uKCdjbGljayB0b3VjaHN0YXJ0JywgZnVuY3Rpb24oZSkge1xuICAgICAgY29uc29sZS5sb2coJy5ndGEtZXZlbnQtbmF2Q2xpY2snKTtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGNvbnN0ICR0YXJnZXQgPSAkKGUuY3VycmVudFRhcmdldCk7XG4gICAgICBjb25zdCAkaHJlZiA9ICR0YXJnZXQuYXR0cignaHJlZicpO1xuICAgICAgY29uc3QgJHRhcmdldEJsYW5rID0gKCR0YXJnZXQuYXR0cigndGFyZ2V0JykgPT09ICdfYmxhbmsnKTtcbiAgICAgIGxldCAkbmF2VHlwZSA9IG51bGw7XG4gICAgICBpZiAoJHRhcmdldC5jbG9zZXN0KCcjZHJhd2VyJykubGVuZ3RoID49IDEpIHtcbiAgICAgICAgJG5hdlR5cGUgPSAnbWFpbic7XG4gICAgICB9XG4gICAgICBpZiAoJHRhcmdldC5jbG9zZXN0KCdmb290ZXInKS5sZW5ndGggPj0gMSkge1xuICAgICAgICAkbmF2VHlwZSA9ICdmb290ZXInO1xuICAgICAgfVxuICAgICAgbGV0ICRuYXZJdGVtID0gJHRhcmdldC50ZXh0KCkudHJpbSgpO1xuICAgICAgaWYgKCRuYXZJdGVtLmxlbmd0aCA8PSAwKSB7XG4gICAgICAgICRuYXZJdGVtID0gJHRhcmdldC5hdHRyKCdocmVmJyk7XG4gICAgICB9XG4gICAgICBpZiAoJG5hdkl0ZW0ubGVuZ3RoIDw9IDApIHtcbiAgICAgICAgJG5hdkl0ZW0gPSAkdGFyZ2V0LmZpbmQoJ3NwYW4sIGgxJylbMF0udGV4dCgpLnRyaW0oKTtcbiAgICAgIH1cbiAgICAgIC8vIGNvbnNvbGUubG9nKCRuYXZUeXBlKTtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCRuYXZJdGVtKTtcbiAgICAgIGNvbnN0IF9vYmogPSB7XG4gICAgICAgICdldmVudCcgOiAnbmF2Q2xpY2snLFxuICAgICAgICAnbmF2VHlwZSc6ICRuYXZUeXBlLFxuICAgICAgICAnbmF2SXRlbSc6ICRuYXZJdGVtLFxuICAgICAgICAnZXZlbnRDYWxsYmFjaycgOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAvLyBjb25zb2xlLmxvZygncmVxdWVzdCBzdWNjZXNzZnVsJyk7XG4gICAgICAgICAgYW5hbHl0aWNzLm5hdmlnYXRlKCRocmVmLCAkdGFyZ2V0QmxhbmspO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBhbmFseXRpY3MucHVzaChfb2JqKTtcbiAgICB9KTtcblxuICAgIC8vIEJhc2ljIEpTIGVycm9yIGxpc3RlbmVyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKCd3aW5kb3cgbGlzdGVuZXIgZm9yIGVycm9yJyk7XG4gICAgICBjb25zdCBfb2JqID0ge1xuICAgICAgICAnZXZlbnQnIDogJ2Vycm9yJyxcbiAgICAgICAgJ2Vycm9yTWVzc2FnZSc6ICdFcnJvciBvcmlnaW5hdGluZyBmcm9tICcgKyBlcnJvci5maWxlbmFtZSArXG4gICAgICAgICAgICAgICAgICAgICAgICAnIGF0IGxpbmUgJyArIGVycm9yLmxpbmVubyArICcsIGNvbHVtbiAnICsgZXJyb3IuY29sbm8gK1xuICAgICAgICAgICAgICAgICAgICAgICAgJzpcXG4nICsgZXJyb3IubWVzc2FnZVxuICAgICAgfVxuICAgICAgYW5hbHl0aWNzLnB1c2goX29iaik7XG4gICAgfSk7XG4gIH1cbiAgaWYgKCEhZGF0YUxheWVyKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2RhdGFMYXllciBmb3VuZCcpO1xuICAgIGNvbnN0IHdhaXRUaW1lID0gKCQoJ2JvZHkudHlwZS1wb3N0cycpLmxlbmd0aCkgPj0gMSA/IDEyMDAgOiA2MDA7XG4gICAgY29uc3QgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoZGF0YUxheWVyLmxlbmd0aCA+PSAzKSB7XG4gICAgICAgIGFuYWx5dGljcy5pbml0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZygnVGhlIEdUTSBkYXRhTGF5ZXIgY2Fubm90IGJlIGZvdW5kLi4uIFNraXBwaW5nIGFuYWx5dGljcyBsaXN0ZW5lcnMuJyk7XG4gICAgICB9XG4gICAgfSwgd2FpdFRpbWUpO1xuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUubG9nKCdFcnJvciEgVGhlIEdUTSBkYXRhTGF5ZXIgY2Fubm90IGJlIGZvdW5kLi4uIFNraXBwaW5nIGFuYWx5dGljcyBsaXN0ZW5lcnMuJyk7XG4gIH1cbn0pKGpRdWVyeSk7XG4iXX0=