"use strict";function _readOnlyError(a){throw new Error("\""+a+"\" is read-only")}/**
 * Analytics listeners
 */(function(a){// console.log('Loading Analytics listeners');
var b={};if(b.push=function(a){dataLayer.push(a)},b.init=function(){a(".gta-event-CTAClick").on("click touchstart",function(c){console.log(".gta-event-CTAClick"),c.preventDefault();// console.log(e.currentTarget);
var d=a(c.currentTarget).attr("href"),e={event:"CTAClick",CTADestination:encodeURI(d),eventCallback:function eventCallback(){window.location.href=d}};// console.log($target);
b.push(e)}),a(".gta-event-bioExpanded").on("click touchstart",function(c){console.log(".gta-event-bioExpanded");var d=a(c.currentTarget);// console.log($target);
b.push({event:"bioExpanded"})}),a(".gta-event-eMailSignupAttempt").on("click touchstart",function(){console.log(".gta-event-eMailSignupAttempt");b.push({event:"eMailSignupAttempt"})}),a(".gta-event-postSelected").on("click touchstart",function(c){console.log(".gta-event-postSelected"),c.preventDefault();var d=a(c.currentTarget).attr("href"),e={event:"postSelected",discoverySelection:encodeURI(d),eventCallback:function eventCallback(){window.location.href=d}};b.push(e)}),a(".gta-event-showAbstractandVersion").on("click touchstart",function(c){console.log(".gta-event-showAbstractandVersion");var d=a(c.currentTarget),e=null;e=a(".row.subnav.small-tab-nav").is(":visible")?(_readOnlyError("$paperCategory"),a(".row.subnav.small-tab-nav").find("ul.anchor-links li a.active").text()):(_readOnlyError("$paperCategory"),a(".row.subnav.large-tab-nav").find("#researchTabs li a.active").text());// console.log('$paperCategory: ' + $paperCategory);
var f=null;f=a(c.currentTarget).closest(".research-paper").find(".info h5").text();// console.log($paperName);
var g={event:"showAbstractandVersion",paperCategory:e?e:"Unavailable",paperName:f?f:"Unavailable"};b.push(g)}),a(".gta-event-categorySelected").on("click touchstart",function(c){console.log(".gta-event-categorySelected");var d=a(c.currentTarget),e=d.text(),f={event:"categorySelected",paperCategory:e?e:"Unavailable"};b.push(f)}),a(".gta-event-paperDownloadbyVersion").on("click touchstart",function(c){console.log(".gta-event-paperDownloadbyVersion");// e.preventDefault();
var d=a(c.currentTarget),e=null;e=a(c.currentTarget).closest(".research-paper").find(".info h5").text();// console.log($paperName);
var f=d.attr("data-date"),g={event:"paperDownloadbyVersion",paperVersion:f,paperName:e};// console.log($paperVersion);
b.push(g)}),a(".gta-event-paperDownloadLatest").on("click touchstart",function(c){console.log(".gta-event-paperDownloadLatest");var d=a(c.currentTarget),e=d.closest(".research-paper").find(".info h5").text(),f=d.attr("data-date");b.push({event:"paperDownloadLatest",paperVersion:f,paperName:e})}),a(".gta-event-articleSelected").on("click touchstart",function(c){console.log(".gta-event-articleSelected"),c.preventDefault();var d=a(c.currentTarget).attr("href"),e=a(c.currentTarget).closest(".row.news-item").find("h4 a"),f=e.text(),g=e.attr("data-outlet");b.push({event:"articleSelected",newsArticleName:f,newsArticlePublication:g,eventCallback:function eventCallback(){window.location.href=d}})}),a(".gta-event-faqTopicExpanded").on("click touchstart",function(c){console.log(".gta-event-faqTopicExpanded");var d=a(c.currentTarget),e=a(c.currentTarget).find("h5").text();b.push({event:"faqTopicExpanded",faqTopicExpansion:e})}),a(".gta-event-navClick").on("click touchstart",function(c){console.log(".gta-event-navClick"),c.preventDefault();var d=a(c.currentTarget),e=null;1<=d.closest("#drawer").length&&(e="main"),1<=d.closest("footer").length&&(e="footer");var f=d.text().trim();0>=f.length&&(f=d.attr("href")),0>=f.length&&(f=d.find("span, h1")[0].text().trim());// console.log($navType);
// console.log($navItem);
var g={event:"navClick",navType:e,navItem:f,eventCallback:function eventCallback(){window.location.href=d.attr("href")}};b.push(g)}),window.addEventListener("error",function(a){console.log("window listener for error");var c={event:"error",errorMessage:"Error originating from "+a.filename+" at line "+a.lineno+", column "+a.colno+":\n"+a.message};b.push(c)})},!!dataLayer)// console.log('dataLayer found');
var c=1<=a("body.type-posts").length?1200:600,d=setTimeout(function(){3<=dataLayer.length?b.init():console.log("The GTM dataLayer cannot be found... Skipping analytics listeners.")},c);else console.log("Error! The GTM dataLayer cannot be found... Skipping analytics listeners.")})(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,