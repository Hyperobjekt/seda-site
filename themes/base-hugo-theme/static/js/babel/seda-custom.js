"use strict";function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}(function(a){function b(b){// console.log(checkScroll);
// If the scroll is at the top, not sticky.
// Transition comes farther down the page for
// the the front page.
var c=a("#hero")?a("#hero").height():0;// console.log(heroHeight);
b<=c-64?(a("nav").removeClass("sticky-top"),a(".subnav").removeClass("sticky-top"),a(".row.open-all").removeClass("sticky-top"),1<=a("#scrollForMore").length&&(a("#scrollForMore").addClass("hide"),a("#scrollForMore").removeClass("show"))):b>c-64&&(a("nav").addClass("sticky-top"),a(".subnav").addClass("sticky-top"),a(".row.open-all").addClass("sticky-top"),1<=a("#scrollToTop").length&&(b+a(window).height()==a(document).height()?(console.log("bottom!"),a("#scrollToTop").addClass("show"),a("#scrollToTop").removeClass("hide")):(a("#scrollToTop").addClass("hide"),a("#scrollToTop").removeClass("show"))),1<=a("#scrollForMore").length&&(b+a(window).height()>=a(document).height()-300?(console.log("yah bottom!"),a("#scrollForMore").addClass("hide"),a("#scrollForMore").removeClass("show")):(a("#scrollForMore").addClass("show"),a("#scrollForMore").removeClass("hide"))))}function c(b){b.preventDefault();var c=a(b.target),d=c.parents(".research-paper");d.toggleClass("abstract-visible")}/**
     * Sets up all the animation targets and chars
     */function d(){// console.log('setupAnime');
// Growth Y Axis line
// Growth Y Axis Cap
//Growth X Axis Line
//Growth X Axis Cap
m=anime({targets:["#growth-graphic svg"],opacity:1,duration:250,autoplay:!1,easing:"easeInOutQuad",direction:"linear"}),n=anime({targets:["#y-axis-growth #growth-y-axisline"],strokeDashoffset:[anime.setDashoffset,0],easing:"easeInOutQuad",duration:1e3,direction:"linear",autoplay:!1}),o=anime({targets:["#y-axis-growth #growth-y-axis-cap path"],strokeDashoffset:[anime.setDashoffset,0],easing:"easeInOutQuad",duration:250,delay:1e3,direction:"linear",autoplay:!1}),p=anime({targets:["#x-axis-growth #growth-x-axis-line"],strokeDashoffset:[anime.setDashoffset,0],easing:"easeInOutQuad",duration:1e3,direction:"linear",autoplay:!1}),q=anime({targets:["#x-axis-growth #growth-x-axis-cap path"],strokeDashoffset:[anime.setDashoffset,0],easing:"easeInOutQuad",duration:250,delay:1e3,direction:"linear",autoplay:!1})}function e(){//Y Axis Line
//Y Axis Cap
//X Axis Line
//X Axis Cap
//Trend Lines
//Scores Text
//2009 Text
//2016 Text
r=anime.path("#dkblueline"),s=anime.path("#medblueline"),t=anime.path("#greenline"),u=1200,v=anime({targets:["#trendgraphic svg"],opacity:1,duration:250,autoplay:!1,easing:"easeInOutQuad",direction:"linear"}),w=anime({// Opacity of schools
targets:["#grnschool","#medblueschool","#dkblueschool"],opacity:1,duration:250,delay:u,easing:"easeInOutQuad",direction:"linear",autoplay:!1}),x=anime({//Dark Blue School Animation
targets:["#dkblueschool .schoolshape"],translateX:r("x"),translateY:r("y"),direction:"linear",easing:"easeInOutQuad",duration:1500,delay:u,autoplay:!1}),y=anime({//Medium Blue School Animation
targets:["#medblueschool .mbschoolshape"],translateX:s("x"),translateY:s("y"),direction:"linear",easing:"easeInOutQuad",duration:1500,delay:u,autoplay:!1}),z=anime({//Green School Animation
targets:["#grnschool .grnschoolshape"],translateX:t("x"),translateY:t("y"),direction:"linear",easing:"easeInOutQuad",duration:1500,delay:u,autoplay:!1}),A=anime({targets:["#y-axis-trend #y-axisline"],strokeDashoffset:[anime.setDashoffset,0],easing:"easeInOutQuad",duration:1e3,direction:"linear",autoplay:!1}),B=anime({targets:["#y-axis-trend #y-axis-cap path"],strokeDashoffset:[anime.setDashoffset,0],easing:"easeInOutQuad",duration:250,delay:1e3,direction:"linear",autoplay:!1}),C=anime({targets:["#x-axis-trend-2 #x-axis-line"],strokeDashoffset:[anime.setDashoffset,0],easing:"easeInOutQuad",duration:1e3,direction:"linear",autoplay:!1}),D=anime({targets:["#x-axis-trend-2 #x-axis-cap path"],strokeDashoffset:[anime.setDashoffset,0],easing:"easeInOutQuad",duration:250,delay:1e3,direction:"linear",autoplay:!1}),E=anime({targets:["#trendlines path"],strokeDashoffset:[anime.setDashoffset,0],easing:"easeInOutQuad",duration:1500,direction:"linear",delay:u,autoplay:!1}),F=anime({targets:["text#Scores-3"],opacity:1,easing:"linear",duration:250,direction:"linear",delay:375,autoplay:!1}),G=anime({targets:["text#t2009"],opacity:1,easing:"linear",duration:250,direction:"linear",delay:250,autoplay:!1}),H=anime({targets:["text#t2016"],opacity:1,easing:"linear",duration:250,direction:"linear",delay:500,autoplay:!1})}function f(){// console.log('animateGrowthGraphic()');
m.play(),n.play(),o.play(),p.play(),q.play()}function g(){// console.log('animateTrendGraphic()');
v.play(),w.play(),x.play(),y.play(),z.play(),A.play(),B.play(),C.play(),D.play(),E.play(),F.play(),G.play(),H.play()}function h(){// console.log('setElPositions()');
I=a("#avg-graphic").offset().top,J=a("#growth-graphic").offset().top,K=a("#trendgraphic").offset().top,L=a(window).height()}function i(){var b=a(window).scrollTop()+L-300;// console.log('scroll = ' + Scroll);
b>=I&&!M&&(a("#avg-graphic").addClass("move"),M=!0),b>=J&&!N&&(a("#growth-graphic").addClass("move"),f(),N=!0),b>=K&&!O&&(g(),O=!0)}/**
     * Checks if SVG Transforms are supported in the browser
     * @returns {bool} true if supported, false if not
     */function j(){// create svg element
var a=document.createElementNS("http://www.w3.org/2000/svg","svg");a.setAttribute("viewBox","0 0 8 8"),_extends(a.style,{position:"absolute",top:0,left:0,width:"8px",height:"8px",zIndex:99999}),a.innerHTML="<rect width=\"4\" height=\"4\" fill=\"#fff\" style=\"transform: translate(4px, 4px)\"/>",document.body.appendChild(a);// check if the rectangle has been transformed
var b=document.elementFromPoint(6,6)!==a;return a.parentNode.removeChild(a),b}var k=!!window.matchMedia("(prefers-reduced-motion)").matches,l=a.noConflict(!1),a=l;a("#openAll, #openAllSR").on("click touchstart",function(b){b.preventDefault();var c=a(b.currentTarget),d="true"===c.attr("data-do-open-panels"),e=a(".accordion-section .collapse");1<=e.length&&(d?(e.addClass("show"),a("#openAll, #openAllSR").text("CLOSE ALL").attr("data-do-open-panels","false"),a("#openAllSR").attr("aria-label","Close all accordion panels"),a("#openAll").removeClass("icon-down").addClass("icon-up")):(e.removeClass("show"),a("#openAll, #openAllSR").text("OPEN ALL").attr("data-do-open-panels","true"),a("#openAllSR").attr("aria-label","Open all accordion panels"),a("#openAll").removeClass("icon-up").addClass("icon-down")))}),j()&&!k?(a(".svg-animated").removeClass("d-md-none"),a(".svg-static").addClass("d-md-none")):(a(".svg-static").removeClass("d-md-none"),a(".svg-static").addClass("opaque"),a(".svg-animated").addClass("d-md-none")),anime.set(["#mainland",".plotpoints","body.home .hero-child h2.hero-animate","body.home .hero-child p.hero-animate","body.home .hero-child button.hero-animate"],{opacity:[0]}),anime({targets:["g#ses-metric","g#grades","g#hp-x-line"],opacity:[0,.3],duration:1,delay:1}),anime({// Scatterplot points
targets:[".plotpoints"],opacity:[0,.25],easing:"easeOutCubic",delay:anime.stagger(24,{start:300})// increase delay for each element.
}),anime({// Map
targets:["#mainland"],keyframes:[{opacity:.8,delay:1400,duration:1e3},{opacity:.6,delay:2400,duration:800}],easing:"easeInSine"}),anime({// Y Axis
targets:["#grades path#axis-line-2"],strokeDashoffset:[anime.setDashoffset,0],easing:"easeInOutSine",duration:1400}),anime({// X Axis
targets:["#hp-x-line path#map-x"],strokeDashoffset:[anime.setDashoffset,0],easing:"easeInOutSine",duration:1400}),anime({// Grades
targets:"g#grades text",transform:["translate(0 400)","translate(0 0 )"],// have to do it in this format to get it to work on webkit
easing:"easeInOutSine",duration:1400}),anime({// Numbers
targets:"g#ses-metric text",transform:["translate(-500 0)","translate(0 0 )"],// have to do it in this format to get it to work on webkit
easing:"easeInOutSine",duration:1400}),anime({// Headline text
targets:"body.home .hero-child h2.hero-animate",opacity:[0,1],easing:"easeInOutSine",duration:1e3,delay:3e3}),anime({// Body text
targets:"body.home .hero-child p.hero-animate",opacity:[0,1],easing:"easeInOutSine",duration:800,delay:4e3}),anime({// Button
targets:"body.home .hero-child button.hero-animate",opacity:[0,1],transform:["translate(100 0)","translate(0 0 )"],easing:"easeInOutSine",duration:800,delay:5200});// Variables for anime
var m=null,n=null,o=null,p=null,q=null,r=null,s=null,t=null,u=null,v=null,w=null,x=null,y=null,z=null,A=null,B=null,C=null,D=null,E=null,F=null,G=null,H=null,I=null,J=null,K=null,L=null,M=!1,N=!1,O=!1,P={activeBio:null,allBios:null,update:function update(){// console.log('updateModal.update()');
// console.log('activeBio = ');
// console.log(updateModal.activeBio);
var b=a(this.allBios[this.activeBio]).find("button"),c=b.parent(),d=b.parent().siblings(".name").text(),e=b.parent().siblings(".title").text(),f=b.parent().siblings(".bio").html(),g=b.closest(".column-people").children(".pic").attr("style"),h=b.parent().siblings(".bigimage").html();// Get name, title, bio, and image
// Set contents
// Set focus on close button
a("#modalImg").attr("style",g),a("img#bigimage").attr("src",h),a("#modalName").text(d),a("#modalTitle").html(e),a("#modalBio").html(f),a("#peopleBioModal").modal("show"),0>=this.activeBio?(a("#prevBio").prop("disabled",!0),a("#nextBio").prop("disabled",!1)):this.activeBio>=this.allBios.length-1?(a("#prevBio").prop("disabled",!1),a("#nextBio").prop("disabled",!0)):(a("#prevBio").prop("disabled",!1),a("#nextBio").prop("disabled",!1)),a("#closeModal").focus()}};a(document).ready(function(){// Add href to URL for FAQ items
/**
 * Smooth Scroll
 * ---
 *
 */ // Get smooth scroll offset depending on window width
function f(){return 767>window.innerWidth?56:window.innerWidthwidth<1023?56:56}// Add an additional page offset where needed by checking the URL
function g(a){return-1===a.indexOf("help-faq")?-1===a.indexOf("methods")?-1===a.indexOf("about")?-1===a.indexOf("why-eviction-matters")?0:80:80:80:80}function j(b,c){if(location.pathname.replace(/^\//,"")==b.pathname.replace(/^\//,"")&&location.hostname==b.hostname&&b.hash.length){// check for accordion link
var d=a("[href=\""+b.hash+"\"].collapsed");// if no accordion link look for an element with the ID
// console.log(target);
// scroll to the target
if(0===d.length&&(d=a(b.hash)),0===d.length&&(d=a("[name=\""+b.hash.slice(1)+"\"]")),d.length)return a("html,body").animate({scrollTop:d.offset().top-(f()+g(location.pathname))+"px"},1e3),d.focus(),c&&c(d),!1}}a(window).scroll(function(){var c=a(window).scrollTop();b(c)});// Check on page load as well.
var l=a(window).scrollTop();if(b(l),a(".scroll-to-section").on("click",function(c){console.log("click"),c.preventDefault();var d=a(c.currentTarget).attr("data-scroll-target"),e=a("#"+d);// console.log(target_id);
1<=e.length&&(a("html, body").animate({scrollTop:e.offset().top-63},500),1<=a("body.type-help-faq")?(e.find("h3"),$focus[0].focus()):a(e).focus());var f=a(window).scrollTop();b(f)}),1<=a(".launch-people-bio").length&&(P.allBios=a(".column-people"),a(".launch-people-bio").on("click",function(b){b.preventDefault();var c=a(b.target);// Store active bio index so navigation between them works.
P.activeBio=P.allBios.index(c.closest(".column-people")),P.update(),a("#prevBio").on("click",function(){1<=P.activeBio&&(--P.activeBio,P.update())}),a("#nextBio").on("click",function(){P.activeBio<P.allBios.length-1&&(++P.activeBio,P.update())}),a("#peopleBioModal button.close").on("click",function(){P.activeBio=0,a("#prevBio").unbind("click"),a("#nextBio").unbind("click")})})),a("body.research .small-tab-nav ul li a").on("click",function(b){a(this).tab("show"),$target=a(b.target),a("body.research .small-tab-nav ul li a").removeClass("active highlight"),$target.addClass("active highlight")}),a("a.show-versions").on("click",function(a){c(a)}),a("body.research a[data-toggle=\"tab\"]").on("click touchstart",function(){1<=a(".research-paper.abstract-visible").length&&a(".research-paper.abstract-visible").removeClass("abstract-visible")}),a("#toggleDrawer").on("click",function(){a("#drawer").addClass("show"),a("#closeDrawer").focus()}),a("#closeDrawer").on("click",function(){a("#drawer").removeClass("show"),a("#toggleDrawer").focus()}),a("#closeLoop").on("keypress",function(b){13==b.which&&a("#closeDrawer").focus()}),a(".subnav a").click(function(){a(".subnav a").removeClass("highlight"),a(this).addClass("highlight")}),a(function(){j(window.location,function(b){b.hasClass("collapsed")&&(b.collapse("toggle"),a(b.attr("href")).collapse("toggle"))}),a(".smoothScroll").click(function(){j(this),a(this).hasClass("dropdown-item")&&a(this).closest("div.dropdown").find(".dropdown-toggle").dropdown("toggle")})}),1<=a("#scrollToTop").length&&a("#scrollToTop").on("click touchstart",function(){a("html,body").animate({scrollTop:"480px"},2e3)}),a(function(){a(".accordion-section .collapsed").click(function(){history.pushState?history.replaceState(null,null,a(this).attr("href")):location.hash=a(this).attr("href")})}),a(document).ready(function(){a(".toggle-accordion").on("click",function(){var d=a(this).attr("accordion-id"),e=a(d+" .collapse.in").length;a(this).toggleClass("active"),0==e?b(d):c(d)});var b=function(b){console.log("setAllPanelOpen"),a(b+" .panel-collapse:not(\".in\")").collapse("show")},c=function(b){console.log("setAllPanelclose"),a(b+" .panel-collapse.in").collapse("hide")}}),1<=a("body.type-research").length&&a("a[data-toggle=\"tab\"]").on("shown.bs.tab",function(b){// console.log('tab switch');
// console.log(e.target);
var c=a(b.target).attr("href");// activated tab
a(c).find("h5"),$articles=a(c).find("h5"),$articles[0].focus()}),1<=a("body.home").length){h(),a(window).resize(function(){h()}),h(),k||(d(),e());// Scroll listener vars and interval
var m=!1,n=a(window).scroll(function(){m=!0}),o=setInterval(function(){M&&N&&O?(a(window).off("scroll",n),clearInterval(o)):m&&!k&&(i(),m=!1)},50)}})})(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,